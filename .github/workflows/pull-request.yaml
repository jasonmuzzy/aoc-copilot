name: aoc-copilot tests

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  LOCALAPPDATA: ${{ vars.LOCALAPPDATA }}

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Checkout examples
        uses: actions/checkout@v4
        with:
          repository: "jasonmuzzy/aoc-copilot-examples"
          token: ${{ secrets.AOC_EXAMPLE_TOKEN }}
          path: "${{ vars.LOCALAPPDATA }}/AoC-Copilot"

      - name: Clean up examples and puzzles directories
        run: |
          # Navigate to the local cache directory
          cd ${{ vars.LOCALAPPDATA }}/AoC-Copilot

          # Get the current year
          current_year=$(date +%Y)
          # Determine the max year to keep based on the current date
          if [ "$(date +%m)" -ge 12 ]; then
              max_year=$current_year
          else
              max_year=$((current_year - 1))
          fi

          # Delete all directories/files except the year directories
          year_pattern=$(seq 2015 $max_year | sed 's/$/\\|/' | tr -d '\n' | sed 's/\\|$//')
          find . -mindepth 1 -maxdepth 1 -regextype sed ! -regex "\.\/\($year_pattern\)" -exec rm -rf {} +

          # Delete any folders inside year folders except "examples" or "puzzles", and delete all
          # files except example/puzzle files
          for year in $(seq 2015 $max_year); do
            if [ -d "$year" ]; then
              find "$year" -mindepth 1 -type d ! -name 'examples' ! -name 'puzzles' -exec rm -rf {} +
              find "$year"/examples -type f ! -regex '.*/\([1-9]\|1[0-9]\|2[0-5]\)\.json' -exec rm -rf {} +
              find "$year"/examples -mindepth 1 -type d -exec rm -rf {} +
              find "$year"/puzzles -type f ! -regex '.*/\([1-9]\|1[0-9]\|2[0-5]\)\.html' -exec rm -rf {} +
              find "$year"/puzzles -mindepth 1 -type d -exec rm -rf {} +
            fi
          done

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm ci
      - run: npm run build
      - env:
          NO_HTTP: true
        run: npm run test
