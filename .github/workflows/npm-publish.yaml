name: Release and Publish to NPM

on:
  push:
    tags:
      - 'v*'  # Triggers on tags that start with "v"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'  # Specify your Node.js version here

    - name: Install dependencies
      run: npm ci

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Update package.json version
      run: |
        npm version $VERSION --no-git-tag-version

    - name: Commit package.json changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json
        git commit -m "chore(release): update version to $VERSION"

    - name: Build the project
      run: npm run build

    - name: Get branch from tag
      id: get_branch
      run: |
        TAG_COMMIT=$(git rev-list -n 1 $GITHUB_REF)
        
        # Fetch all remote branches
        git fetch --all
        
        # Show all branches to debug
        echo "Available branches:"
        git branch -a
        
        # Find the branches that contain the tag commit
        BRANCHES=$(git branch -r --contains $TAG_COMMIT | grep -v 'HEAD' | awk '{print $1}' | sed 's/origin\///')
        
        # Check if branches were found and set BRANCH_NAME
        if [ -z "$BRANCHES" ]; then
          echo "No branches found containing the tag commit."
          exit 1
        fi
        
        # Take the first branch found
        BRANCH_NAME=$(echo "$BRANCHES" | head -n 1)
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Push changes back to the repository
      run: |
        echo "Pushing to branch: $BRANCH_NAME"
        git push origin HEAD:$BRANCH_NAME

    - name: Set NPM auth token
      run: npm set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}

    - name: Publish to NPM
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        npm publish
